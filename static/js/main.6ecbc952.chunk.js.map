{"version":3,"sources":["api.js","components/Otp.jsx","components/Login.jsx","components/Tubes.jsx","components/AddClient.jsx","components/Dashbaord.jsx","components/Client.jsx","components/Clients.jsx","components/Test.jsx","components/CreateTium.jsx","App.jsx","index.js"],"names":["api","axios","create","baseURL","createHeaders","token","headers","Authorization","getPatientRoles","JSON","parse","localStorage","getItem","get","getKupas","roleNum","a","roles","data","role","id","kupaId","kupas","kupa","apis","coordsId","otp","payload","post","login","createTium","paylod","findClient","createTask","getTaskById","validateTube","tubeNum","validateCooler","coolerId","barcode","addRec","source","exposeAbroad","closeContact","otherReason","cough","fever","otherBreathingSympt","symptStart","exposerCountry","leavingDate","otherReasonNotes","otherBreathingSymptNotes","testTubeBarCode","tubeId","containerBarCode","poolingType","poolingComplete","tubeBarcode","CoolerBarcode","poolingSampleBarcode","igumId","getCoordination","getRole","getKupa","getClients","getInstitutions","validateIgum","igumCode","Otp","idNum","phone","setIdNum","setPhone","history","useHistory","useState","message","setMessage","className","onClick","push","type","placeholder","onChange","e","target","value","then","res","console","log","catch","err","response","Login","setOtp","status","setItem","stringify","Tubes","setTubeId","setCoolerId","setIgumId","useEffect","maxlength","AddClient","totalTests","clientId","setClientId","firstName","setFirstName","lastName","setLastName","found","setFound","setSource","setDate","addExtraFields","lastUpdate","assignedTester","femiCode","isUrgent","kupaReferenceId","requestTime","supplierCode","supplierDesc","creatTaskJson","client","key","secretKey","dupClient","sourceTmp","iv","roleData","institute","coordination","Object","assign","lastUpdated","phone2","phoneAreaCode2","email","email2","task","resTask","defaultValue","Dashbaord","Client","Clients","setTotalTests","clients","setClients","filteredClients","setFilteredClients","activeBtn","setActiveBtn","doneNum","setDoneNum","clientList","filterByStatus","statusCodes","list","length","filter","includes","handleClick","style","backgroundColor","map","Test","active","setActive","CreateTium","setInstitutions","setInstName","name","getOptions","App","loggedIn","childProps","exact","path","to","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ecbc952.chunk.js","sourcesContent":["import { getRoles } from \"@testing-library/dom\";\r\nimport axios from \"axios\";\r\n// const coords = \"de84c671-f59f-40d2-86f5-77dadd39d46a\"\r\nconst api = axios.create({\r\n  baseURL: \"https://magenavot-be-prd.femimoh.co.il/femiCovidSampellingForNursingHome/1.0.0\",\r\n});\r\n\r\nconst createHeaders = (token) => {\r\n  return {\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token\r\n    }\r\n\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const otp = (payload) => {\r\n  return api.post(`/OTPRquest`, payload);\r\n};\r\n\r\n\r\nexport const login = (payload) => {\r\n  return api.post(`/logIn`, payload)\r\n};\r\n\r\n//localStorage.getItem('jwtToken')\r\n//  localStorage.setItem(\"jwtToken\", 'Bearer ' + token);\r\n\r\n// 749cfc59-5312-48c6-90ee-f422e692230f\r\n// export const openTium = () => { //AKA plus button \r\n//   let currUser = JSON.parse(localStorage.getItem(\"currUser\"))\r\n//   let token = currUser.token\r\n//   return api.get(`/coordination/749cfc59-5312-48c6-90ee-f422e692230f`, createHeaders(token));\r\n\r\n// };\r\nexport const createTium = (paylod) => { //AKA plus button \r\n  let currUser = JSON.parse(localStorage.getItem(\"currUser\"))\r\n  let token = currUser.token\r\n\r\n  return api.post(`/coordination`, paylod, createHeaders(token));\r\n\r\n};\r\n//300628583  the id of patient\r\nexport const findClient = (id) => {\r\n  let currUser = JSON.parse(localStorage.getItem(\"currUser\"))\r\n  let token = currUser.token\r\n  return api.get(`/patient/recurent/1/${id}/`, createHeaders(token));\r\n\r\n};\r\nconst getPatientRoles = () => {\r\n  let currUser = JSON.parse(localStorage.getItem(\"currUser\"))\r\n  let token = currUser.token\r\n  return api.get(`/lookup/patientRoles`, createHeaders(token));\r\n};\r\nconst getKupas = () => {\r\n  let currUser = JSON.parse(localStorage.getItem(\"currUser\"))\r\n  let token = currUser.token\r\n  return api.get(`/lookup/kupas`, createHeaders(token));\r\n};\r\n\r\n\r\nconst getTaskById = () => {// should get a task id\r\n  let currUser = JSON.parse(localStorage.getItem(\"currUser\"))\r\n  let token = currUser.token\r\n  return api.get(`/tasks/5a5ffb39-f464-4efb-99a9-d72dc7f8c934`, createHeaders(token));\r\n};\r\n\r\nconst validateTube = (tubeNum) => {\r\n  let currUser = JSON.parse(localStorage.getItem(\"currUser\"))\r\n  let token = currUser.token\r\n  return api.get(`/validations/barcodes/test-tube/${tubeNum}`, createHeaders(token));\r\n};\r\n\r\nconst validateCooler = (coolerId) => {\r\n  let currUser = JSON.parse(localStorage.getItem(\"currUser\"))\r\n  let token = currUser.token\r\n  return api.post(`/delivery/coolerBarcode?secondOnly=true`, createHeaders(token), {\r\n    barcode: coolerId\r\n  });\r\n};\r\nconst validateIgum = (igumCode,coolerId) => {\r\n  let WhatIsThat = \"e395d04b-41d3-441d-849a-c4f091b64019\"\r\n  let currUser = JSON.parse(localStorage.getItem(\"currUser\"))\r\n  let token = currUser.token\r\n  return api.get(`/validations/barcodes/pooling/${igumCode}?coolerBarcode=${coolerId}&excludeTestId=${WhatIsThat}`, createHeaders(token));\r\n};\r\n\r\n\r\nconst addRec = (data) => {\r\n  let payload = {\r\n    source: data.source,\r\n    exposeAbroad: false,\r\n    closeContact: false,\r\n    otherReason: true,\r\n    cough: false,\r\n    fever: false,\r\n    otherBreathingSympt: false,\r\n    symptStart: \"1900-01-01\",\r\n    exposerCountry: \"\",\r\n    leavingDate: \"1900-01-01\",\r\n    otherReasonNotes: \"ג\",\r\n    otherBreathingSymptNotes: \"\",\r\n    testTubeBarCode: data.tubeId,\r\n    containerBarCode: data.coolerId,\r\n    poolingType: 2,\r\n    poolingComplete: 1,\r\n    tubeBarcode: data.tubeId,\r\n    CoolerBarcode: data.coolerId,\r\n    poolingSampleBarcode: data.igumId\r\n  }\r\n  let currUser = JSON.parse(localStorage.getItem(\"currUser\"))\r\n  let token = currUser.token\r\n  return api.post(`/test/${data.source}?isDraft=false`, payload,createHeaders(token));\r\n};\r\n\r\n\r\n\r\nasync function getRole(roleNum) {\r\n  let roles = (await getPatientRoles()).data\r\n  for (const role of roles) {\r\n    if (role.id === roleNum) {\r\n      return role\r\n    }\r\n  }\r\n  return null\r\n}\r\n\r\n\r\nfunction getInstitutions() {\r\n  let currUser = JSON.parse(localStorage.getItem(\"currUser\"))\r\n  let token = currUser.token\r\n  return api.get(`/lookup/institutes`, createHeaders(token))\r\n}\r\n\r\nasync function getKupa(kupaId) {\r\n  let kupas = (await getKupas()).data\r\n  for (const kupa of kupas) {\r\n    if (kupa.id === kupaId) {\r\n      return kupa\r\n    }\r\n  }\r\n  return null\r\n}\r\n\r\n//bd8a3d31-dbd8-4685-9d6a-a9780f49b3d6\r\nfunction getCoordination(coordsId) {\r\n  let currUser = JSON.parse(localStorage.getItem(\"currUser\"))\r\n  let token = currUser.token\r\n  return api.get(`/coordination/${coordsId}`, createHeaders(token));\r\n\r\n\r\n}\r\n\r\nfunction createTask(payload) {\r\n  let currUser = JSON.parse(localStorage.getItem(\"currUser\"))\r\n  let token = currUser.token\r\n  return api.post(`/tasks`, payload, createHeaders(token));\r\n\r\n};\r\n\r\n\r\nfunction getClients(coordsId) {\r\n  let currUser = JSON.parse(localStorage.getItem(\"currUser\"))\r\n  let token = currUser.token\r\n  return api.get(`/tasks/coordination/${coordsId}`, createHeaders(token));\r\n\r\n};\r\nconst coordsId = \"9afaf80e-6026-4ba9-b439-27722bb48f46\"  //or ehad\r\n\r\n\r\nconst apis = {\r\n  coordsId,\r\n  otp,\r\n  login,\r\n  createTium,\r\n  findClient,\r\n  createTask,\r\n  getTaskById,\r\n  validateTube,\r\n  validateCooler,\r\n  addRec,\r\n  getCoordination,\r\n  getRole,\r\n  getKupa,\r\n  getClients,\r\n  getInstitutions,\r\n  validateIgum\r\n};\r\n\r\nexport default apis;\r\n\r\n\r\n","\r\nimport './otp.css';\r\nimport apis from \"../api\";\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Otp({\r\n  idNum,\r\n  phone,\r\n  setIdNum,\r\n  setPhone }) {\r\n\r\n  let history = useHistory();\r\n  const [message, setMessage] = useState('');\r\n\r\n  function otp(e) {\r\n    apis.otp({ idNum, phone }).then((res) => {\r\n      console.log(res.data)\r\n      setMessage(\"\")\r\n      history.push(\"/login\");\r\n\r\n    })\r\n      .catch((err) => {\r\n        if (err.response && err.response.data) {\r\n          console.log(err.response.data.message);\r\n          setMessage(err.response.data.message)\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"otp-wrapper\">\r\n      <h1>Please Log In</h1>\r\n      <div>\r\n        <button onClick={()=>history.push('/test')}>camera</button>\r\n        <label>\r\n          <p>id</p>\r\n          <input type=\"text\" placeholder=\"setIdNum\" onChange={e => setIdNum(e.target.value)} />\r\n        </label>\r\n        <label>\r\n          <p>phone</p>\r\n          <input type=\"text\"  placeholder=\"phone\" onChange={e => setPhone(e.target.value)} />\r\n        </label>\r\n        <div>\r\n          <button onClick={otp}>Submit</button>\r\n        </div>\r\n        <span className=\"err-message\">{message}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}","\r\nimport './otp.css';\r\nimport apis from \"../api\";\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Login({ idNum, phone }) {\r\n  let history = useHistory();\r\n  const [otp, setOtp] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n\r\n  function login(e) {\r\n    let payload = {\r\n      idNum,\r\n      otp,\r\n      phone\r\n    }\r\n    apis.login(payload).then((res) => {\r\n      if (res.status !== 200) {\r\n        setMessage(\"error\")\r\n      }\r\n      else{\r\n        setMessage(\"\")\r\n        localStorage.setItem(\"currUser\", JSON.stringify(res.data))\r\n        history.push(\"/dashboard\");\r\n        console.log(res.data)\r\n      }\r\n\r\n    })\r\n      .catch((err) => {\r\n        if (err.response && err.response.data) {\r\n          console.log(err.response.data.message);\r\n          setMessage(err.response.data.message)\r\n        }\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"otp-wrapper\">\r\n      <h1> Please Log In</h1>\r\n      <input type=\"text\" placeholder=\"setOtp\" onChange={e => setOtp(e.target.value)} />\r\n\r\n      <button onClick={login}>Submit</button>\r\n      <span className=\"err-message\">{message}</span>\r\n    </div>\r\n  )\r\n}","import './otp.css';\r\nimport React, { useState,useEffect } from 'react'\r\nimport apis from '../api';\r\nimport { Redirect } from 'react-router';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Tubes({ source }) {\r\n    let history = useHistory();\r\n\r\n    const [tubeId, setTubeId] = useState('');\r\n    const [coolerId, setCoolerId] = useState('');\r\n    const [igumId, setIgumId] = useState('');\r\n    const [message, setMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        setCoolerId(localStorage.getItem(\"coolerId\"))\r\n        setIgumId(localStorage.getItem(\"igumId\"))\r\n\r\n    }, [])\r\n    async function validateTube(tubeId) {\r\n        let res = await apis.validateTube(tubeId)\r\n        if (res.data == true) return true\r\n        setMessage(\"tube err\")\r\n        return false\r\n    }\r\n    async function validateCooler() {\r\n        let res = await apis.validateTube(coolerId)\r\n        if (res.data == true) return true\r\n        setMessage(\"cooler err\")\r\n        return false\r\n    }\r\n    async function validateIgum() {\r\n        let res = await apis.validateIgum(igumId, coolerId)\r\n        if (res.status == 204){\r\n            return true\r\n        }\r\n        setMessage(\"igum err\")\r\n        return false\r\n    }\r\n    async function addRec() {\r\n        console.log(\"hola\")\r\n        // let source = \"365e31b3-299f-4145-aa3d-a7f3a0532d0f\"\r\n        let data = {\r\n            source, tubeId, coolerId, igumId\r\n        }\r\n\r\n        let res\r\n        try {\r\n            if (await validateTube(tubeId)) {\r\n                if (await validateCooler(coolerId)) {\r\n                    if (await validateIgum(igumId, coolerId)) {\r\n                        res = await apis.addRec(data)\r\n                        if (res.status === 200) {\r\n                            history.push(\"/clients\");;\r\n                        } else {\r\n                            setMessage(res.status)\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n        } catch (err) {\r\n            setMessage(err.response)\r\n        }\r\n    }\r\n    function handleChangeCooler(e){\r\n        setCoolerId(e.target.value)\r\n        localStorage.setItem(\"coolerId\",e.target.value)\r\n    }\r\n\r\n\r\n    function handleChangeIgum(e){\r\n        setIgumId(e.target.value)\r\n        localStorage.setItem(\"igumId\",e.target.value)\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"cols\">\r\n                <input type=\"text\" placeholder=\"tubeId\" maxlength=\"9\" onChange={e => setTubeId(e.target.value)} />\r\n                <input type=\"text\" placeholder=\"coolerId\" maxlength=\"11\" onChange={handleChangeCooler }  value={coolerId}/>\r\n                <input type=\"text\" placeholder=\"igumId\" maxlength=\"9\" onChange={handleChangeIgum } value={igumId} />\r\n                <button onClick={addRec}>add client</button>\r\n                <p>{message}</p>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import './otp.css';\r\nimport React, { useState } from 'react'\r\nimport apis from \"../api\";\r\nimport secretKey from 'secret-key';\r\nimport Tubes from './Tubes'\r\n// const coords = \"de84c671-f59f-40d2-86f5-77dadd39d46a\" // this is changing according to the Tium\r\n\r\nexport default function AddClient({ totalTests }) {\r\n    const [clientId, setClientId] = useState('')\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [message, setMessage] = useState('');\r\n    const [found, setFound] = useState(false)\r\n    const [source, setSource] = useState('')\r\n    const [date, setDate] = useState('')\r\n\r\n\r\n    function addExtraFields(lastUpdate) {\r\n        console.log(\"extra fields\")\r\n        let currUser = JSON.parse(localStorage.getItem(\"currUser\"))\r\n        let assignedTester = currUser.id\r\n        return {\r\n            assignedTester,\r\n            femiCode: \"\",\r\n            isUrgent: false,\r\n            kupaReferenceId: \"\",\r\n            // requestTime: \"2021-10-06T11:08:32.893Z\", // change this one to the new date format\r\n            requestTime: lastUpdate, // change this one to the new date format\r\n            status: 0,\r\n            supplierCode: \"\",\r\n            supplierDesc: \"\",\r\n        }\r\n    }\r\n    async function creatTaskJson(client,lastUpdate) {\r\n        let key = secretKey.create('1EEA6DC-JAM4DP2-PHVYPBN-V0XCJ9X')\r\n        console.log(key)\r\n        let dupClient = { ...client }\r\n        let sourceTmp = key.iv\r\n        setSource(sourceTmp)\r\n        dupClient.source = sourceTmp\r\n        let roleData = await apis.getRole(dupClient.role)\r\n        dupClient.role = roleData\r\n        dupClient.kupa = await apis.getKupa(dupClient.kupa)\r\n        let res = await apis.getCoordination(apis.coordsId)\r\n        dupClient.institute = res.data.institute\r\n        dupClient.coordination = res.data\r\n        dupClient = Object.assign(dupClient, addExtraFields(lastUpdate));\r\n        delete dupClient.lastUpdated\r\n        delete dupClient.phone2\r\n        delete dupClient.phoneAreaCode2\r\n        delete dupClient.email\r\n        delete dupClient.email2\r\n        console.log(dupClient)\r\n        return dupClient\r\n    }\r\n    async function findClient() {\r\n        let client\r\n        let task\r\n        let res\r\n        try {\r\n             res = await apis.findClient(clientId)\r\n            \r\n            if (res.status === 204) {\r\n                setMessage(\"cannot find the data\")\r\n            } else {\r\n                setFirstName(res.data.firstName)\r\n                setLastName(res.data.lastName)\r\n                console.log(\"date\")\r\n                console.log(res.data.lastUpdated + \"Z\")\r\n                console.log(\"date\")\r\n\r\n                setDate(res.data.lastUpdated+\"Z\")\r\n                setMessage(\"\")\r\n                client = res.data\r\n                setFound(true)\r\n            }\r\n        } catch (err) {\r\n            console.log(err.status)\r\n\r\n            if (err.response && err.response.data) {\r\n                console.log(err.response.data.message);\r\n                setMessage(err.response.data.message)\r\n            }else{\r\n                setMessage(\"something went wrong\")\r\n            }\r\n        }\r\n        try {\r\n            if (client) {\r\n                task = await creatTaskJson(client,res.data.lastUpdated)\r\n                console.log(\"object\")\r\n                console.log(task)\r\n                console.log(\"object\")\r\n            }\r\n        } catch (err) {\r\n            console.log(err)\r\n            setMessage(err.status)\r\n        }\r\n        try {\r\n            if (task) {\r\n                let resTask = await apis.createTask(task)\r\n                console.log(resTask.data)\r\n            }\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n        //need to change status\r\n\r\n    }\r\n    return (\r\n        <div className=\"otp-wrapper\">\r\n            <p>totalTests: {totalTests}</p>\r\n            <p>cooler amount: {totalTests % 50}</p>\r\n            <p>Igum amount: {totalTests % 15}</p>\r\n\r\n            <h1>add client page</h1>\r\n            <input type=\"text\" placeholder=\"id\" defaultValue=\"30062858\" onChange={e => setClientId(e.target.value)} />\r\n            <button onClick={findClient}>find client</button>\r\n            <p>{firstName}</p>\r\n            <p>{lastName}</p>\r\n            <p className=\"err-message\">{message}</p>\r\n            {found && (\r\n                <Tubes source={source} />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport './otp.css';\r\nimport apis from \"../api\";\r\nimport React, { useState } from 'react';\r\nimport AddClient from \"./AddClient\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nexport default function Dashbaord({ totalTests }) {\r\n    let history = useHistory();\r\n\r\n    return (\r\n        <div className=\"otp-wrapper\">\r\n            <button onClick={e => history.push(\"/clients\")}>client list</button>\r\n            <h1>Covid app</h1>\r\n            <AddClient totalTests={totalTests}></AddClient>\r\n        </div>\r\n    )\r\n};","import React from 'react'\r\n\r\nexport default function Client({firstName,lastName}) {\r\n    return (\r\n        <div>\r\n            <p>{firstName}</p>\r\n            <p>{lastName}</p>\r\n            <hr />\r\n        </div>\r\n    )\r\n}\r\n","import './otp.css';\r\nimport apis from \"../api\";\r\nimport React, { useEffect, useState } from 'react'\r\nimport Client from \"./Client\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// const coordsId = \"de84c671-f59f-40d2-86f5-77dadd39d46a\"  //oleg\r\n\r\n// what are kind of clients are those \r\n// status 1,0 - not done\r\n// status 4,2 - inside system \r\nexport default function Clients({ setTotalTests }) {\r\n    const [clients, setClients] = useState([])\r\n    const [filteredClients, setFilteredClients] = useState([])\r\n    const [activeBtn, setActiveBtn] = useState(true)\r\n    const [doneNum, setDoneNum] = useState(0)\r\n\r\n\r\n    let clientList = []\r\n    let history = useHistory();\r\n\r\n    useEffect(async () => {\r\n        let res\r\n        try {\r\n            res = await apis.getClients(apis.coordsId)\r\n            clientList = res.data\r\n            console.log(clientList)\r\n            setClients(clientList)\r\n            setTotalTests(clientList.length)\r\n            filterByStatus([2, 4], clientList)\r\n        } catch (error) {\r\n            console.log(error.response)\r\n        }\r\n    }, [])\r\n\r\n    function filterByStatus(statusCodes) {\r\n        let winList = clients.length > 0 ? clients : clientList\r\n        let list = winList.filter(client => statusCodes.includes(client.status));\r\n        setFilteredClients(list)\r\n        setDoneNum(list.length)\r\n    }\r\n\r\n    function handleClick(statusCodes) {\r\n\r\n        setActiveBtn(statusCodes.includes(2) ? true : false)\r\n        filterByStatus(statusCodes)\r\n\r\n    }\r\n    return (\r\n        <div>\r\n\r\n            <button onClick={e => history.push(\"/dashboard\")}>+</button>\r\n            <div className=\"rows\">\r\n                <button style={{ backgroundColor: activeBtn ? \"blue\" : \"\" }} onClick={() => handleClick([2, 4])}>complete</button>\r\n                <button style={{ backgroundColor: !activeBtn ? \"blue\" : \"\" }} onClick={() => handleClick([0, 1])}>not complete</button>\r\n                <p>done : {doneNum}</p>\r\n\r\n            </div>\r\n            <div className=\"rows\">\r\n                <div className=\"cols\">\r\n                    {filteredClients.map((client, key) => (\r\n                        <Client key={key} firstName={client.firstName} lastName={client.lastName} />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React, { useState } from 'react';\r\n// import BarcodeScannerComponent from \"react-webcam-barcode-scanner\";\r\n\r\nfunction Test() {\r\n\r\n    const [data, setData] = useState('Not Found');\r\n    const [active, setActive] = useState(false);\r\n\r\n// \r\n    return (\r\n        <>\r\n            <button onClick={() => setActive(true)}>Scan Barcodes</button>\r\n            {active &&\r\n                <>\r\n                    <button onClick={() => setActive(false)}>X</button>\r\n                    {/* <BarcodeScannerComponent\r\n                        width={500}\r\n                        height={500}\r\n                        onUpdate={(err, result) => {\r\n                            if (result) {\r\n                                setData(result.text)\r\n                                setActive(false)\r\n                            }\r\n                            else setData('Not Found')\r\n                        }}\r\n                    /> */}\r\n                </>\r\n            }\r\n            <p>{data}</p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Test;\r\n","import React, { useEffect, useState } from 'react'\r\nimport apis from \"../api\";\r\nimport './otp.css';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function CreateTium() {\r\n    let history = useHistory();\r\n\r\n    const [institutions, setInstitutions] = useState([])\r\n    const [instName, setInstName] = useState('')\r\n\r\n\r\n\r\n    useEffect(async () => {\r\n        let res\r\n        try {\r\n            res = await apis.getInstitutions()\r\n            setInstitutions(res.data)\r\n            console.log(res.data)\r\n            console.log(typeof res.data)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n\r\n\r\n    }, [])\r\n\r\n    function getOptions() {\r\n        // let data = institutions\r\n        // .filter(inst => instName === '' || inst.instituteName.includes(instName))\r\n        // .map((inst, index) => <option key={index} value={inst.instituteName}>{inst.instituteName}</option>);\r\n        // console.log(\"11\")\r\n        // console.log(data)\r\n        //  return institutions\r\n        //     .filter(inst => instName === '' || inst.instituteName.includes(instName))\r\n        //     .map((inst, index) => <option key={index} value={inst.instituteName}>{inst.instituteName}</option>);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"otp-wrapper\">\r\n            <button onClick={()=>history.push(\"/dashboard\")}>add client</button>\r\n            <input type=\"text\" onChange={e => setInstName(e.target.value)} />\r\n            <div>tnirntinrsietnsir</div>\r\n            <select id=\"inst\" name=\"inst\">\r\n                <option value=\"volvo\">Volvo</option>\r\n                <option value=\"saab\">Saab</option>\r\n                {getOptions()}\r\n\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Otp from \"./components/Otp\";\r\nimport Login from \"./components/Login\";\r\nimport Dashbaord from \"./components/Dashbaord\";\r\nimport Clients from \"./components/Clients\";\r\nimport Test from \"./components/Test\";\r\n\r\n\r\nimport apis from \"./api\";\r\nimport CreateTium from \"./components/CreateTium\";\r\n\r\nfunction App() {\r\n\r\n  const [idNum, setIdNum] = useState('300628583');\r\n  const [phone, setPhone] = useState('0542226958');\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [totalTests, setTotalTests] = useState(123)\r\n\r\n  useEffect(() => {\r\n\r\n  }, [])\r\n\r\n  const childProps = {\r\n    idNum,\r\n    phone,\r\n    setIdNum,\r\n    setPhone\r\n  };\r\n\r\n  return (\r\n\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          {loggedIn ? <Redirect to=\"/dashboard\" /> : <Otp  {...childProps} />}\r\n        </Route>\r\n      \r\n        <Route path=\"/dashboard\"\r\n        >\r\n          <Dashbaord totalTests={totalTests} />\r\n        </Route>\r\n\r\n        <Route path=\"/test\">\r\n          <Test />\r\n        </Route>\r\n\r\n        <Route path=\"/login\">\r\n          <Login\r\n            idNum={idNum}\r\n            phone={phone} />\r\n        </Route>\r\n        <Route path=\"/clients\">\r\n          <Clients setTotalTests={setTotalTests} />\r\n        </Route>\r\n\r\n        <Route path=\"/tium\">\r\n          <CreateTium />\r\n        </Route>\r\n\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Switch,\r\n//   Route,\r\n//   Redirect,\r\n// } from \"react-router-dom\";\r\n// import GroupDetails from \"./components/TeamDetails\";\r\n// import Table from \"./components/TeamTable\";\r\n// import apis from \"./api\";\r\n\r\n// function App() {\r\n//   const [list, setList] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     apis\r\n//       .getTeams()\r\n//       .then((res) => {\r\n//         let teamArr = res.data.teams;\r\n//         setList(teamArr.slice(0, 10));\r\n//       })\r\n//       .catch((err) => {\r\n//         console.log(err);\r\n//       });\r\n//   }, []);\r\n\r\n//   return (\r\n//     <Router>\r\n//       <Switch>\r\n//         <Route exact path=\"/\">\r\n//           <Redirect to=\"/teams\" />\r\n//         </Route>\r\n//         <Route exact path=\"/teams\">\r\n//           <Table list={list} />\r\n//         </Route>\r\n//         <Route path=\"/teams/:id\">\r\n//           <GroupDetails />\r\n//         </Route>\r\n//       </Switch>\r\n//     </Router>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}